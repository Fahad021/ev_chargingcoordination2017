[general]
	iterations = 1
		# Monte Carlo simulations
	resolution = 15
		# (min) {15,5,1}
	duration = 24
		# (hours)
	overlap = 0
		# N/A (min)
	starting = 13
		# (hours)
	algorithm = LP
		# {priceGREEDY, networkGREEDY, GA, PSO, AFAP}
	season = winter
		# N/A {'winter', 'transition', 'summer'}
	network_sensitivity = on
	overload_constraints = on
	regulation_service = off

[uncertainty]
	unc_ev_arr = off
	unc_ev_dep = off
	unc_ev_soc = off
	unc_dem = off
	unc_pv = off
	unc_pri = off
	
[uncertainty_mitigation]
	demand = none
		# {norm, hist, none} # TODO hist
	availability = none
		# {prob, penalty, none}
	battery_soc = none
		# {prob,  none}
	req_demand_certainty = 0.5
	req_av_certainty = 0.9
	req_bsoc_certainty = 0.8
	penalty = 100
	
[travel_patterns]
	c_tes = 5.7259
	loc_tes = 4.6852
	scale_tes = 68.2325
	c_tem = 0.7156
	loc_tem = 1044.1477
	scale_tem = 63.8094
	loc_tss = 0.000001
	scale_tss = 159.3926
	c_tsm = 3.4608
	loc_tsm = 477.9556
	scale_tsm = 87.8239
	loc_mis = 0.000001
	scale_mis = 14.9226
	a_mim = 2.0523
	loc_mim = 1.728
	scale_mim = 9.6962
	tripstart_corcoeff = 0.3547
	mileage_corcoeff = 0.6814
	mileage_scaling = 2.0

[electric_vehicles]
	capacity = 30
		# (kWh) {25,30}
	consumption = 0.13
		# (kWh/km) [0.1,0.15]
	chargingrate_min = 0.0
		# (kW) negative for discharge, zero for unidirectional flow
	chargingrate_max = 3.7
		# (kW) {3.68,7.36} single phase EU standard (16A) /semi-fast (32A) 
	charging_efficiency = 0.93
		# (-) [0.9,0.95]
	targetSOC = 1.0
		# (-) [0.9,1.0]
	penetration = 1.0
		# (-) [0,1]
	change_max = 3.7
		# (kW)
	reg_threshold = 0.5
		# (-) percent of max capacity

[market_prices]
	surcharge = 14
		# (p/kWh)
	spread = 5
		# (-) [1,10]
	regulation_price = 30
		# N/A (p/kW) TODO specify reasonable value!
		
[network]
	voltage_min = 0.94
		# (pu)
	voltage_max = 1.10
		# (pu)
	line_max = 1.0
		# N/A (-)
	load_multiplier = 1.0
		# (-) increases residential loads by factor

[networkGREEDY]
	decrement = 2.0
		# decrement of maximum charging rate
	urgency_mode = arrival
		# {soc, manual, distance, arrival}

# TODO parametrise further choices!